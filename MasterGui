-- This file was generated using Luraph Obfuscator v13.5.6

do return(function(rX,LX,jX,oX,VX,ZX,aX,bX,zX,sX,JX,vX,nX,CX,fX,TX,BX,AX,cX,eX,HX,dX,QX,MX,PX,RX,kX,mX,lX,XX,uX,q,...)local G,y,WX,t,tX,i=XX.band,pcall,0X0001,nil,nil,nil;local h=select;while WX<0x3 do if WX<=0 then do i=nX;end;WX=3;else do if WX~=1 then tX={};WX=0;continue;else do t=oX;end;WX=0X2;end;end;end;end;WX=1;local X,R=nil,(nil);while WX<=1 do if WX~=0 then do X=RX;end;WX=0X0;continue;else R=string.gsub;WX=2;end;end;local m=next;local yX=({});local u,K,o=JX.insert,type,(uX.rep);WX=0;local C,I=nil,(nil);while WX<=1 do if WX==0X000 then C=PX;do WX=1;end;else I={4,0X00005,7};do WX=2;end;continue;end;end;local gX=function(...)return h('#',...),{...};end;local D,S=XX.lshift,(string.byte);local V=dX.wrap;WX=0X1;local Q,z=nil,nil;while WX~=0X2 do if WX~=0X0 then Q=QX;do WX=0X000;end;else z=0x80000000;WX=0X002;end;end;local H=z-VX;local j,B=unpack,mX;local p=error;local f=C();local g=(tonumber);do WX=0X0003;end;local e,l,J,s=nil,nil,nil,(nil);do repeat do if not(WX<=1)then do if not(WX<=0X00002)then if WX~=0x3 then J=uX.match;WX=0X2;continue;else do e=0X1;end;WX=0;continue;end;else WX=5;continue;end;end;else if WX~=0 then do l=AX;end;WX=0X4;do continue;end;else WX=0X00001;end;end;end;until WX==0X00005;end;WX=0X08;local k,M,T,Z,v,L,b,W=nil,nil,nil,nil,nil,nil,nil,nil;do while WX<0x0A do if not(WX<=0X04)then if not(WX<=0X6)then if WX<=0X07 then k=function()local tW=nil;for d2=0,1 do if d2==0 then tW=S(l,e,e);else e=e+VX;end;end;return tW;end;do WX=4;end;continue;elseif WX==8 then l=R(i(l,0X5),"..",function(oj)if S(oj,0X2)~=0X000048 then local ak,Uk=1,(nil);while ak~=2 do if ak==0X0 then do if s then local Ku=(nil);for EK=0X0,0X0001 do if EK==0 then Ku=o(Uk,s);else do s=jX;end;end;end;return Ku;else return Uk;end;end;ak=0X2;continue;else Uk=X(g(oj,0X0010));ak=0x0;do continue;end;end;end;else local mW=(0x0);while(true)do do if mW~=0 then do return"";end;else s=g(i(oj,VX,1));mW=0X00001;continue;end;end;end;end;end);WX=7;else T=function()local TG,ZG=M("\060\I4",l,e);do for dq=0x0,1 do if dq~=0X0 then return TG;else e=ZG;do continue;end;end;end;end;end;WX=0X02;end;else if WX==5 then v=Z-0X1;WX=0X3;else do local xN,HN=0x1,(nil);do while"o\}\A\068\049\077\?h\l"do if xN~=0X0 then HN=2;do xN=0;end;else for NT=0X00001,0x00001F do do for m5=0X00,0X1 do do if m5==0 then(L)[NT]=HN;continue;else HN=HN*BX;do continue;end;end;end;end;end;end;break;end;end;end;end;WX=0x0;end;end;else do if WX<=1 then if WX~=0x0000 then W=bit32.bxor;WX=10;continue;else do b=function()local km,tm,pm=0X2,nil,(nil);while 0X26b95604 do if km<=0X0000 then return tm;else if km~=1 then tm,pm=M(CX,l,e);km=0X01;continue;else do e=pm;end;km=0X00;continue;end;end;end;end;end;do WX=0X001;end;end;else if WX<=0X2 then Z=4294967296;WX=0X00005;continue;else if WX==3 then do L={[0X0]=1};end;WX=0x06;else M=MX;WX=0X009;continue;end;end;end;end;end;end;end;local O,A,P,c,x,E,r,F,a,U=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;for Zp=0,9 do if Zp<=4 then if Zp<=0X1 then if Zp~=0x0 then do A=fX;end;else O=XX.bor;continue;end;else if Zp<=0X02 then P=eX;else do if Zp~=3 then x=lX;else c=function(JM,eM,iM)local kM,gM=0,nil;while(true)do if not(kM<=0X000)then if kM==0X1 then return gM;else gM=gM-gM%1;kM=1;continue;end;else gM=(JM/L[eM])%L[iM];kM=2;continue;end;end;end;end;end;end;end;else if Zp<=6 then if Zp==0X005 then E=sX;continue;else do r=function()local m2,U2=M("\060\d",l,e);e=U2;do return m2;end;end;end;end;else if Zp<=0X07 then F=function()local S_,R_=0,0;while true do local fK=(S(l,e,e));e=e+1;R_=O(R_,D(G(fK,127),S_));if G(fK,0x0080)==0X0 then return R_;end;do S_=S_+0X7;end;end;end;else if Zp==0X00008 then a=0X0002^52;else do U={[0X008]=kX,[0X00000]=0X5,[0X0007]=false,[TX]=0.334490637696676,[6]=0.6612137687826665,[0X06]='~\068M\082\'B\0663',[0X8]=0.6374245284262225,[8]=0X5,[8]=zX,[0X6]=0X004,[0X6]=0x08,[0]=0X2,[7]=3,[0X8]=0.6640961503161367,[0X08]=3,[0x00005]=TX,[8]=6,[0X0004]=1,[0X8]=0X1};end;end;end;end;end;end;local w=(k());local qX=k();local xX,N=nil,(nil);for Fu=0X0000,0x1 do do if Fu==0X00000 then xX=function(Bw)local Uw=1;local rw,xw,Kw=nil,nil,(nil);while Uw<0X3 do if not(Uw<=0X00000)then do if Uw==0x1 then do rw={S(l,e,e+3)};end;do Uw=0;end;continue;else Kw=W(rw[0X2],qX);Uw=3;end;end;else do xw=W(rw[1],qX);end;Uw=0X0002;end;end;local tw=W(rw[ZX],qX);local iw=(W(rw[4],qX));Uw=1;do repeat if Uw~=0 then do qX=(0x000B1*qX+Bw)%256;end;Uw=0;else e=e+0X4;break;end;until(false);end;return iw*0x01000000+tw*65536+Kw*256+xw;end;else N=function()local Ct=F();if not(Ct>H)then else return Ct-Z;end;return Ct;end;do continue;end;end;end;end;local d=(rawget);WX=0X5;local Y,KX,hX,pX,iX,SX=nil,nil,nil,nil,nil,nil;do repeat if WX<=4 then do if WX<=0x1 then if WX~=0 then function pX(kP,EP,KP)local sP,eP,CP=kP[0X0004],kP[8],kP[0x1];local FP,hP=kP[0x00007],(kP[2]);local DP=(kP[5]);local JP=(kP[6]);local lP=P({},{__mode="v"});local rP=nil;local pP=(kP[3]);rP=function(...)local dh,ah=1,{};local th=(C());local Th,ih=gX(...);local lh=((th==f and EP or th));do Th=Th-0X1;end;local zh=0x00000;local uh={[2]=ah,[1]=kP};for BH=0X000,Th do do if not(eP>BH)then break;else(ah)[BH]=ih[BH+1];end;end;end;if not hP then ih=nil;elseif JP then ah[eP]={n=Th>=eP and Th-eP+0X00001 or 0,j(ih,eP+0X1,Th+1)};end;if lh==th then else(B)(rP,lh);end;while true do local JJ=DP[dh];local BJ=JJ[0X00002];dh=dh+0X00001;do if not(BJ<42)then if BJ>=63 then if BJ<74 then if not(BJ<0X44)then do if not(BJ>=71)then if BJ<69 then if ah[JJ[4]]~=JJ[0X3]then dh=JJ[5];end;else if BJ~=0x46 then local mH=(JJ[0X00005]);local eH=ah[JJ[4]];ah[mH+1]=eH;ah[mH]=eH[JJ[3]];else ah[JJ[0X5]]=uh[JJ[4]];end;end;else if BJ<72 then ah[JJ[0X5]]=ah[JJ[4]]==ah[JJ[7]];else do if BJ==0X49 then(ah)[JJ[0x5]]=ah[JJ[4]]>ah[JJ[0x7]];else local Rn=JJ[0X004];local Zn=(ah[Rn]);for To=Rn+1,JJ[7]do Zn=Zn..ah[To];end;do(ah)[JJ[0x5]]=Zn;end;end;end;end;end;end;else if not(BJ>=65)then if BJ~=64 then(ah)[JJ[5]]=ah[JJ[0X4]][JJ[3]];else if JJ[0x07]==0x29 then dh=dh-0X1;(DP)[dh]={[0x5]=(JJ[5]-8),[4]=(JJ[4]-0X0008),[0X0002]=0X31};else if ah[JJ[5]]then dh=JJ[0X4];end;end;end;else if not(BJ<0x42)then do if BJ==0x000043 then if ah[JJ[0x4]]~=JJ[0X3]then else dh=JJ[5];end;else ah[JJ[0x005]]=ah[JJ[0X4]][ah[JJ[0X07]]];end;end;else local lN=JJ[5];local AN=ah[lN+2];local LN,dN=ah[lN],(ah[lN+0X1]);(ah)[lN]=V(function()do for Ze=LN,dN,AN do A(true,Ze);end;end;end);dh=JJ[4];end;end;end;else do if BJ<79 then if BJ>=76 then do if BJ<0x04d then if not(ah[JJ[0X4]]<ah[JJ[0X7]])then dh=JJ[0X005];end;else do if BJ==0X004e then local mA=KP[JJ[4]];ah[JJ[5]]=mA[0x1][mA[2]];else do dh=JJ[4];end;end;end;end;end;else if BJ~=75 then local YX=JJ[0X5];ah[YX](ah[YX+1]);zh=YX-1;else repeat local zD,GD=lP,(ah);do if#zD>0 then local zs=({});for Jq,vq in m,zD do for ac,wc in m,vq do if wc[0X1]==GD and wc[2]>=0x0 then local NN=wc[0x2];if not zs[NN]then do(zs)[NN]={GD[NN]};end;end;do(wc)[1]=zs[NN];end;(wc)[2]=1;end;end;end;end;end;until true;local x6=(JJ[0X5]);do return j(ah,x6,x6+JJ[4]-2);end;end;end;else do if not(BJ>=82)then if not(BJ>=80)then local mF=(JJ[0X5]);local tF=((JJ[0x7]-0X00001)*0X32);local yF=(ah[mF]);do for w2=1,JJ[4]do do(yF)[tF+w2]=ah[mF+w2];end;end;end;else if BJ~=81 then do(ah[JJ[5]])[JJ[1]]=JJ[0X03];end;else ah[JJ[5]]=G(ah[JJ[0X4]],ah[JJ[7]]);end;end;else if BJ>=83 then if BJ~=0X54 then local MD=JJ[5];local iD,eD=ah[MD]();if not(iD)then else(ah)[MD+1]=eD;dh=JJ[4];end;else local KF=(JJ[0x5]);do for Cl=KF,KF+(JJ[4]-0x1)do(ah)[Cl]=ih[eP+(Cl-KF)+0X1];end;end;end;else local gA=(JJ[0X5]);zh=gA+JJ[0X4]-0X1;(ah[gA])(j(ah,gA+0X001,zh));do zh=gA-0x00001;end;end;end;end;end;end;end;else if BJ<52 then if BJ<0X2F then if not(BJ>=44)then if BJ==43 then do repeat local Yw,gw=lP,ah;if#Yw>0X0 then local M3={};for MP,mP in m,Yw do do for Ty,zy in m,mP do do if zy[0X1]==gw and zy[0X02]>=0X00000 then local hE=zy[2];if not(not M3[hE])then else(M3)[hE]={gw[hE]};end;zy[1]=M3[hE];(zy)[0X2]=1;end;end;end;end;end;end;until true;end;return j(ah,JJ[5],zh);else if ah[JJ[4]]<ah[JJ[0X7]]then dh=JJ[0X5];end;end;else if not(BJ>=45)then local cV=(JJ[0X005]);ah[cV](ah[cV+0X1],ah[cV+0X2]);zh=cV-1;else if BJ==0X2e then local LS=ah[JJ[0x4]]/ah[JJ[7]];ah[JJ[5]]=LS-LS%1;else ah[JJ[5]]=ah[JJ[0X04]]*ah[JJ[0X07]];end;end;end;else if BJ<49 then if BJ~=48 then if JJ[7]==104 then dh=dh-1;do(DP)[dh]={[5]=(JJ[5]-92),[0X2]=0X000011,[0x00004]=(JJ[0X4]-92)};end;elseif JJ[7]~=240 then(ah)[JJ[5]]=#ah[JJ[0X4]];else dh=dh-0X1;DP[dh]={[0X5]=(JJ[0X005]-0X4B),[0X00004]=(JJ[4]-0X4B),[2]=0x7};end;else(ah)[JJ[0X00005]]=Y(ah[JJ[0X0004]]);end;else do if not(BJ>=0X32)then if JJ[7]==7 then do dh=dh-0x1;end;do(DP)[dh]={[4]=(JJ[0X004]-35),[2]=43,[5]=(JJ[5]-35)};end;elseif JJ[7]~=129 then do repeat local ZT,QT=lP,(ah);if not(#ZT>0x0)then else local g6=({});for bB,dB in m,ZT do for LN,WN in m,dB do if not(WN[0X1]==QT and WN[0x2]>=0X000)then else local z3=(WN[0X02]);if not g6[z3]then(g6)[z3]={QT[z3]};end;WN[1]=g6[z3];WN[0X0002]=0X1;end;end;end;end;until true;end;do return;end;else do dh=dh-0X1;end;DP[dh]={[0X2]=0X00002F,[0X5]=(JJ[5]-0x00D),[0X00004]=(JJ[4]-13)};end;else if BJ~=51 then(ah)[JJ[0X05]]=ah[JJ[4]]^ah[JJ[0x00007]];else(lh)[JJ[0x1]]=ah[JJ[0X5]];end;end;end;end;end;else if not(BJ>=0X39)then do if BJ<0X000036 then if BJ~=53 then if JJ[7]==0X6A then dh=dh-1;(DP)[dh]={[0X05]=(JJ[0X05]-0xE6),[0X4]=(JJ[0X4]-0XE6),[0X0002]=6};elseif JJ[0X0007]~=0XB3 then ah[JJ[5]]=nil;else dh=dh-1;(DP)[dh]={[0X002]=6,[0x0004]=(JJ[4]-37),[0X00005]=(JJ[0X5]-37)};end;else ah[JJ[5]]=ah[JJ[4]]-ah[JJ[0X7]];end;else do if BJ>=0x37 then if BJ~=56 then(ah)[JJ[5]]=ah[JJ[0X00004]]+ah[JJ[0x7]];else(ah)[JJ[0X5]]={j({},0X1,JJ[4])};end;else repeat local YX,EX,GX=lP,ah,JJ[5];do if#YX>0 then local oi={};do for le,De in m,YX do do for qP,cP in m,De do if cP[1]==EX and cP[0X2]>=GX then local Xo=(cP[0X2]);if not oi[Xo]then do(oi)[Xo]={EX[Xo]};end;end;cP[1]=oi[Xo];cP[0x02]=0x1;end;end;end;end;end;end;end;until true;end;end;end;end;else do if not(BJ<0X03c)then if not(BJ>=0x3d)then do ah[JJ[5]][ah[JJ[0x4]]]=JJ[0x03];end;else if BJ~=62 then local FM=(JJ[5]);(ah)[FM]=ah[FM](ah[FM+0X1],ah[FM+0X002]);zh=FM;else(ah)[JJ[0X5]]=E(ah[JJ[4]],ah[JJ[0X7]]);end;end;else if BJ<0X3A then ah[JJ[5]]=ah[JJ[0X00004]]/ah[JJ[0X007]];else if BJ==59 then if not(not ah[JJ[0X00005]])then else dh=JJ[4];end;else do ah[JJ[5]]=ah[JJ[4]]<ah[JJ[7]];end;end;end;end;end;end;end;end;else if BJ<21 then do if BJ<10 then if not(BJ>=0X005)then if not(BJ>=0X2)then if BJ==0X1 then do ah[JJ[0X5]]=ah[JJ[0X4]]~=JJ[0X03];end;else ah[JJ[0X005]]=ah[JJ[4]]%ah[JJ[0X0007]];end;else if not(BJ>=0x3)then local B3=(JJ[0x5]);local N3,E3,P3=ah[B3]();if N3 then ah[B3+0x001]=E3;ah[B3+0X2]=P3;do dh=JJ[4];end;end;else if BJ==4 then do ah[JJ[0X5]]=ah[JJ[0x4]]>=ah[JJ[7]];end;else ah[JJ[0X0005]][ah[JJ[0X4]]]=ah[JJ[7]];end;end;end;else if not(BJ>=7)then if BJ~=0X6 then repeat local BC,uC=lP,ah;if#BC>0X0000 then local Ur=({});do for ur,Er in m,BC do for Lt,Et in m,Er do if Et[0X00001]==uC and Et[0X2]>=0X0 then local bl=Et[2];if not Ur[bl]then Ur[bl]={uC[bl]};end;(Et)[1]=Ur[bl];Et[0x02]=1;end;end;end;end;end;until true;local d7=JJ[0X5];return ah[d7](j(ah,d7+1,zh));else(ah)[JJ[0X00005]]=ah[JJ[0X4]];end;else do if BJ<8 then local u4,c4=JJ[5],(Th-eP);if not(c4<0)then else do c4=-1;end;end;do for tr=u4,u4+c4 do(ah)[tr]=ih[eP+(tr-u4)+1];end;end;zh=u4+c4;else if BJ==0X9 then ah[JJ[0X00005]]=lh[JJ[1]];else local Nb=JJ[5];local lb=(V(function(...)A();do for tg in...do(A)(true,tg);end;end;end));(lb)(ah[Nb],ah[Nb+1],ah[Nb+0X2]);zh=Nb;do(ah)[Nb]=lb;end;dh=JJ[0x4];end;end;end;end;end;else if BJ<0xf then if not(BJ<12)then do if BJ>=13 then if BJ==0XE then local Ww=(JJ[5]);ah[Ww]=ah[Ww](ah[Ww+0X1]);zh=Ww;else zh=JJ[0x5];(ah[zh])();do zh=zh-0X00001;end;end;else(tX)[JJ[4]]=ah[JJ[5]];end;end;else if BJ==0X0B then ah[JJ[5]]={};else local Eg=JJ[5];local Mg=((JJ[7]-1)*50);local Zg=(ah[Eg]);for fM=0X1,zh-Eg do(Zg)[Mg+fM]=ah[Eg+fM];end;end;end;else if BJ>=18 then if not(BJ<0X13)then if BJ==0X000014 then local tS=(KP[JJ[0X4]]);do(tS[1])[tS[2]]=ah[JJ[0X005]];end;else(ah)[JJ[0X00005]]=W(ah[JJ[4]],ah[JJ[0x7]]);end;else repeat local po,Xo=lP,ah;if not(#po>0)then else local OC={};for KO,jO in m,po do do for Eu,Ku in m,jO do if Ku[1]==Xo and Ku[0X00002]>=0X0 then local J3=(Ku[0X0002]);if not OC[J3]then OC[J3]={Xo[J3]};end;(Ku)[1]=OC[J3];Ku[2]=0x1;end;end;end;end;end;until true;return ah[JJ[5]]();end;else if BJ>=16 then if BJ~=0X11 then local jI=JJ[5];local yI=V(function(...)A();for hg,Wg in...do A(true,hg,Wg);end;end);(yI)(ah[jI],ah[jI+1],ah[jI+2]);zh=jI;ah[jI]=yI;dh=JJ[0X4];else if JJ[7]==0X00F6 then dh=dh-0X001;DP[dh]={[2]=0x28,[0X004]=(JJ[0X04]-0X20),[0X0005]=(JJ[5]-32)};elseif JJ[0X00007]~=0X84 then repeat local ht,Zt=lP,ah;do if not(#ht>0X000)then else local kK=({});do for DX,IX in m,ht do for qW,pW in m,IX do do if pW[0x1]==Zt and pW[0X0002]>=0X0000 then local Lw=(pW[0X00002]);if not(not kK[Lw])then else(kK)[Lw]={Zt[Lw]};end;(pW)[0x1]=kK[Lw];pW[2]=1;end;end;end;end;end;end;end;until true;return ah[JJ[5]];else do dh=dh-1;end;do(DP)[dh]={[2]=43,[0X4]=(JJ[4]-190),[5]=(JJ[0X00005]-0x0bE)};end;end;end;else if JJ[0X00007]==0Xae then dh=dh-1;(DP)[dh]={[0X0005]=(JJ[5]-0Xc7),[0x4]=(JJ[0X04]-0xc7),[2]=43};else for Ed=JJ[0x5],JJ[0X4]do(ah)[Ed]=nil;end;end;end;end;end;end;end;else if BJ<0X001F then do if not(BJ<0X1A)then if not(BJ<0X1C)then if not(BJ<0X1d)then do if BJ==30 then do ah[JJ[5]]=ah[JJ[4]]<=ah[JJ[0x7]];end;else ah[JJ[0X05]]=false;end;end;else if not(ah[JJ[4]]<=JJ[3])then dh=JJ[0X05];end;end;else if BJ~=27 then if ah[JJ[4]]~=ah[JJ[0X7]]then else do dh=JJ[5];end;end;else(ah)[JJ[5]]=JJ[1];end;end;else if not(BJ<23)then if BJ<24 then(ah)[JJ[0X5]]=ah[JJ[0X4]]~=ah[JJ[0X7]];else if BJ~=0X0019 then(ah[JJ[5]])[JJ[1]]=ah[JJ[0X7]];else if ah[JJ[4]]==ah[JJ[7]]then else do dh=JJ[5];end;end;end;end;else if BJ==22 then ah[JJ[0x5]]=true;else local ZK=JJ[5];ah[ZK](j(ah,ZK+1,zh));do zh=ZK-0x0001;end;end;end;end;end;else if BJ<0x24 then do if BJ<0x00021 then do if BJ==32 then local rH=(sP[JJ[0X4]]);local FH,lH=rH[9],nil;local jH=(#FH);if jH>0X0000 then do lH={};end;for p7=0X001,jH do local Q7=FH[p7];if Q7[0X01]~=0 then do(lH)[p7-0x1]=KP[Q7[2]];end;else lH[p7-0X1]={ah,Q7[2]};end;end;u(lP,lH);end;ah[JJ[5]]=pX(rH,lh,lH);else(ah)[JJ[0X5]]=JJ[0X0001];end;end;else if not(BJ<34)then if BJ~=35 then(ah)[JJ[5]]=tX[JJ[4]];else local Pi,Vi=JJ[0X0005],(JJ[4]);if Vi~=0X0 then zh=Pi+Vi-1;end;local Ai=(JJ[7]);local Ni,wi=nil,nil;do if Vi==1 then Ni,wi=gX(ah[Pi]());else Ni,wi=gX(ah[Pi](j(ah,Pi+0X001,zh)));end;end;do if Ai==1 then zh=Pi-1;else do if Ai~=0 then Ni=Pi+Ai-0X2;zh=Ni+1;else Ni=Ni+Pi-0X0001;zh=Ni;end;end;local Gt=0;for q4=Pi,Ni do do Gt=Gt+1;end;ah[q4]=wi[Gt];end;end;end;end;else local Xu=JJ[0X5];local uu,nu=ah[Xu]();if uu then dh=JJ[0x00004];ah[Xu+3]=nu;end;end;end;end;else if not(BJ>=0x00027)then do if not(BJ>=0X25)then(uh)[JJ[4]]=ah[JJ[5]];else if BJ~=38 then local pW=JJ[0X00004];(ah)[JJ[0x00005]]=ah[pW]..ah[pW+1];else ah[JJ[0x5]]=ah[JJ[4]]%JJ[3];end;end;end;else if not(BJ<40)then if BJ==0X000029 then ah[JJ[5]]=D(ah[JJ[4]],ah[JJ[7]]);else(ah)[JJ[0X0005]]=-ah[JJ[0x4]];end;else local xW=JJ[5];ah[xW]=ah[xW](j(ah,xW+1,zh));zh=xW;end;end;end;end;end;end;end;end;end;(B)(rP,EP);return rP;end;WX=4;else return pX(SX,f,jX)(...);end;else do if WX<=2 then hX=function(zW)local WW=(T());local vW="";do for bk=1,WW,0X1F3d do local Ok=nil;do for W9=0,0X1 do if W9==0X0 then Ok=bk+vX-1;continue;else if Ok>WW then Ok=WW;end;continue;end;end;end;local Kk=({S(l,e+bk-1,e+Ok-0X0001)});for NA=1,#Kk do local mA=0X00000;while mA~=0X2 do if mA==0X0 then Kk[NA]=W(Kk[NA],w);mA=1;else w=(zW*w+227)%0X0100;do mA=0X2;end;do continue;end;end;end;end;vW=vW..X(j(Kk));end;end;e=e+WW;return vW;end;WX=0X00007;continue;else do if WX==3 then yX=nil;WX=0X0;else function iX()local SU=(nil);for qn=0,0X001 do if qn~=0X0 then SU={};continue;else end;end;local mU,MU,jU,qU,BU,IU,hU=0xb,nil,nil,nil,nil,nil,(nil);local sU=({jX,nil,jX,{},{},jX,{},jX,jX});while mU~=14 do if mU<=6 then if not(mU<=0X002)then do if not(mU<=4)then if mU==0X0005 then for ky=0x1,F()do jU[ky]={k(),F()};end;do mU=0X000e;end;else hU=0X01;mU=2;end;else if mU==3 then jU={};mU=0xd;continue;else qU=sU[5];mU=0X08;continue;end;end;end;else do if not(mU<=0)then do if mU==1 then do for L_=0X1,BU do(qU)[L_]={[0x03]=k(),[0X2]=true,[1]=false,[6]=-16628693,[0X00005]=N(),[0x004]=0.26657106850589907,[6]=-1276173736,[7]=N(),[0X2]=true,[6]="-)\033a",[1]=276009440,[4]=N(),[VX]=k(),[6]=k(),[0X2]=F()};end;end;do mU=0X07;end;continue;else do(sU)[0X9]=jU;end;do mU=5;end;continue;end;end;else do sU[0x1]=F();end;do mU=0X00004;end;continue;end;end;end;else if not(mU<=9)then do if not(mU<=11)then if mU~=0XC then(sU)[2]=c(MU,1,1)~=0;mU=0X00c;else do(sU)[6]=c(MU,BX,1)~=0;end;mU=0X0;continue;end;else do if mU==0Xa then IU={};mU=0X00006;else MU=k();mU=3;end;end;end;end;else if mU<=0X0007 then sU[17]=k();do mU=9;end;else if mU~=0X8 then sU[0x00E]=T();mU=0X0000a;continue;else BU=T()-0X20d0;mU=1;do continue;end;end;end;end;end;end;mU=2;while mU<0x3 do if mU<=0 then do sU[18]=k();end;mU=0X1;else if mU==1 then sU[17]=k();mU=0x3;continue;else do sU[HX]=k();end;mU=0X000;end;end;end;(sU)[0X000d]=k();sU[15]=T();mU=4;local UU,KU=nil,(nil);do while mU<5 do if not(mU<=1)then if mU<=2 then for lr=0X00,KU-1 do(UU)[lr]=iX();end;mU=5;continue;else if mU==3 then do sU[14]=T();end;mU=0X0;do continue;end;else sU[0Xb]=T();do mU=0X3;end;end;end;else if mU~=0x0 then do KU=T()-42886;end;mU=0X2;continue;else UU=sU[0X0004];do mU=0X001;end;continue;end;end;end;end;for Yd=0X0,0X00003 do do if not(Yd<=1)then if Yd==2 then(sU)[8]=F();else do(sU)[0X12]=T();end;continue;end;else if Yd~=0 then(sU)[0X012]=k();continue;else(sU)[3]=F();continue;end;end;end;end;local FU,EU,gU=nil,nil,nil;for lP=0,0X07 do do if not(lP<=0x00003)then if not(lP<=5)then do if lP==6 then(sU)[0x013]=k();continue;else return sU;end;end;else if lP~=0X4 then do sU[0x000F]=k();end;continue;else for ih=0X00001,BU do local Nh=(sU[5][ih]);for Ee,Le in rX(I)do local Pe,ze,Te=0X1,nil,(nil);repeat do if Pe<=0 then do Te=Nh[ze];end;Pe=2;else if Pe==0X00001 then do ze=U[Le];end;Pe=0X0;else if Te==1 then local lF=(SU[Nh[Le]]);local PF,SF=0X0,nil;while PF<2 do do if PF==0 then SF=IU[lF];PF=0X001;else if SF then local sn=nil;local Zn=(0X0001);do while Zn~=3 do do if not(Zn<=0X0)then if Zn~=1 then sn=SF[2];do Zn=0;end;else do Nh[ze]=SF[1];end;do Zn=0x02;end;continue;end;else sn[#sn+0X00001]={Nh,ze};do Zn=3;end;end;end;end;end;end;do PF=0X002;end;continue;end;end;end;elseif Te~=12 then else Nh[Le]=ih+Nh[Le]+1;end;Pe=3;end;end;end;until Pe>=3;end;end;do continue;end;end;end;else if lP<=0X1 then if lP~=0X0 then EU=k();continue;else FU=T()-0X12A9e;continue;end;else do if lP~=2 then do for lz=1,FU do local Yz,kz,Vz=1,nil,(nil);while Yz<=0X1 do do if Yz==0X00 then Vz=jX;do Yz=2;end;else kz=k();Yz=0;end;end;end;for K3=0X0,1 do if K3==0 then(SU)[lz-1]=hU;else if kz==0X36 then Vz=false;elseif kz==0x0000d8 then do Vz=i(hX(EU),LX);end;elseif kz==0x35 then Vz=T();elseif kz==29 then Vz=r();elseif kz==0XC4 then do Vz=i(hX(EU),20);end;elseif kz==115 then Vz=cX;elseif kz==bX then do Vz=b();end;elseif kz==21 then Vz=r()+T();elseif kz~=0x0062 then else Vz=i(hX(EU),k());end;end;end;local Oz={Vz,{}};do for fw=0x0,0x2 do if fw<=0X0 then(IU)[hU]=Oz;continue;else do if fw==1 then hU=hU+0X00001;else if gU then do(yX)[KX]=Oz;end;KX=KX+0X1;end;end;end;end;end;end;end;end;do continue;end;else gU=k()~=0X0;end;end;end;end;end;end;end;WX=0X09;continue;end;end;end;end;end;end;else if not(WX<=6)then if not(WX<=0x00007)then if WX~=0x0008 then do SX=iX();end;do WX=6;end;continue;else KX=0X01;WX=2;continue;end;else WX=0X00001;end;else if WX==5 then Y=aX;WX=0X8;continue;else do(tX)[0X1]=yX;end;do WX=0X03;end;end;end;end;until(false);end;end)(ipairs,0X4,nil,tostring,0X1,3,bit32.bnot,0X000057,'R\m\[k',bit32.rshift,table,0X1f3D,string.sub,"<i8",coroutine.yield,0xtrue,setmetatable,19,coroutine,rawset,string.unpack,getfenv,string.char,false,setfenv,assert,bit32,string,{60882,0X7A8C546b,0Xbd2bb2a2,0X04568bafa,1994154947,0X8cbD1184,0xE4b83Fa8,0X0000C5c706A3,0xA094A869},...);end;
